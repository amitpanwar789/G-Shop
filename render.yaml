# render.yaml (Corrected: Secrets injected from linked group, defined ONLY in Dashboard)
services:
  # --- User Service ---
  - name: user-service
    type: web
    env: docker
    plan: free
    repo: https://github.com/amitpanwar789/G-Shop # Replace with your repo URL
    autoDeploy: true
    dockerContext: ./backend/user-service
    dockerfilePath: ./backend/user-service/Dockerfile
    # REMOVED invalid envVarGroups field
    envVars:                   # Define *only* non-secret variables here
      - key: PORT
        value: 5000
      - key: NODE_ENV
        value: production
      # NOTE: MONGO_URI and JWT_SECRET are NOT defined here.
      # They will come from the linked Environment Group.

  # --- Product Service ---
  - name: product-service
    type: web
    env: docker
    plan: free
    repo: https://github.com/amitpanwar789/G-Shop
    autoDeploy: true
    dockerContext: ./backend/product-service
    dockerfilePath: ./backend/product-service/Dockerfile
    # REMOVED invalid envVarGroups field
    envVars:                   # Define *only* non-secret variables here
      - key: PORT
        value: 5001
      - key: NODE_ENV
        value: production
      # NOTE: MONGO_URI and JWT_SECRET are NOT defined here.

  # --- Order Service ---
  - name: order-service
    type: web
    env: docker
    plan: free
    repo: https://github.com/amitpanwar789/G-Shop
    autoDeploy: true
    dockerContext: ./backend/order-service
    dockerfilePath: ./backend/order-service/Dockerfile
    # REMOVED invalid envVarGroups field
    envVars:                   # Define *only* non-secret variables here
      - key: PORT
        value: 5003
      - key: NODE_ENV
        value: production
      # NOTE: MONGO_URI and JWT_SECRET are NOT defined here.

  # --- Nginx Reverse Proxy ---
  - name: nginx
    type: web
    env: docker
    plan: free
    repo: https://github.com/amitpanwar789/G-Shop
    autoDeploy: true
    dockerContext: ./backend/nginx
    dockerfilePath: ./backend/nginx/Dockerfile
    # No envVars needed here unless nginx specifically requires some

  # --- Optional: Frontend Static Site ---
  # (Include as before if needed)
  # - name: frontend
  #   type: static
  #   repo: https://github.com/amitpanwar789/G-Shop
  #   autoDeploy: true
  #   rootDir: ./frontend
  #   buildCommand: npm install && npm run build # Adjust as needed
  #   publishDir: ./frontend/build             # Adjust as needed
  #   routes:
  #     - type: rewrite
  #       source: /*
  #       destination: /index.html